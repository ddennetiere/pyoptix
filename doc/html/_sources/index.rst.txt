.. PyOptiX documentation master file, created by
   sphinx-quickstart on Tue Sep 21 10:55:45 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to PyOptiX's documentation!
===================================
This library codes for a simulation tool for designing X-ray beamline. It has specifically
been designed for the SOLEIL Synchrotron, but can be used for any X-ray optical design as shown in examples.


.. toctree::
   :maxdepth: 2
   :caption: Contents:
   


Indices and tables
------------------

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`



Installing PyOptiX
------------------

#. Installer miniconda

   Installation page pf miniconda: https://docs.conda.io/en/latest/miniconda.html

#. Create a python 3.9 dedicated environment and install required packages

   .. code-block:: Python

      conda create PyOptiX python=3.9
      conda activate PyOptiX
      conda install lxml

#. Install Jupyterlab (recommended scripting environment )

   .. code-block:: Python

      conda install jupyterlab bokeh pandas plotly

   Create jupyter configuration file

   .. code-block:: Python

      jupyter notebook --generate-config

   There is now a file at ``C:\Users\<username>\.jupyter\jupyter_notebook_config.py``

   Find the line : ``#c.NotebookApp.notebook_dir = ''``

   Replace by ``c.NotebookApp.notebook_dir = '/the/path/to/home/folder/'``

   Do not forget to delete the ``#`` at line start

#. Download optix using git:

   .. code-block:: Python

      git clone ssh://https://gitlab.synchrotron-soleil.fr/OPTIQUE/optical-simulation/optix


   Compile its release version using msys2 cf. https://www.msys2.org/ and codeblocks.

   Download libxml2-2 library and link libxml2.a in the codeblocks linker (without its path) and libxml/bin and libxml/lib in the search directories of the project.

#. Download PyOptiX

   .. code-block:: Python

      git clone ssh://gitlab.synchrotron-soleil.fr/OPTIQUE/optical-simulation/PyOptiX

#. Install ipysheet

   .. code-block:: Python

      conda install -c conda-forge ipysheet
      pip install -U "nbclassic>=0.2.8"
      jupyter nbextension enable --py --sys-prefix widgetsnbextension




PyOptiX classes
---------------

.. automodule:: pyoptix.classes
   :autosummary:
   :members:
   :special-members: __init__
   :inherited-members:
   
   
   
PyOptiX optimizers
------------------

.. automodule:: pyoptix.optimize
   :members:
   :special-members:
   :inherited-members:
   
   
   
   
PyOptiX vizualisations
----------------------
These functions are those called by OpticalElement.show_diagram, they are
given here in case a user would want to plot something unforseen.

.. automodule:: pyoptix.ui_objects
   :members:
   :special-members:
   :inherited-members:




PyOptiX tolerancing
----------------------
These functions aim at providing easy tolerancing of beamline using Monte-Carlo
generated version of a beamline.

.. automodule:: pyoptix.tolerancing
   :members:
   :special-members:
   :inherited-members:

PyOptiX MCPL interface
----------------------
This module provides read write functions for MonteCarloParticleList input/output.
Using methods from pyoptix.classes should be used instead of direct call to these functions.

.. automodule:: pyoptix.mcpl
   :members:
   :special-members:
